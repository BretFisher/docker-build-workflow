---
# THIS IS NOT A TEMPLATE.
# This is just for testing the repo itself.
# This calls the reusable workflow from its local file path.
name: Docker Build with Promotion

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'
      - '.github/linters/**'
  pull_request:
    paths-ignore:
      - 'README.md'
      - '.github/linters/**'

# cancel any previously-started, yet still active runs of this workflow on the same branch
concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

permissions:
  contents: read
  packages: write
  pull-requests: write

jobs:

  # run this job on every push to a PR
  # it will push images to GHCR, but not DockerHub
  docker-build-pr:
    name: Call Build on PR
    if: github.event_name == 'pull_request'
    uses: ./.github/workflows/reusable-docker-build.yaml    
    with:  
      dockerhub-enable: false
      ghcr-enable: true
      push: true
      image-names: |
        ghcr.io/${{ github.repository }}

  gitops-pr:
    name: GitOps PR
    if: github.event_name == 'pull_request'
    needs: docker-build-pr
    runs-on: ubuntu-latest
    steps:
      - name: Checkout MostlyDevOps/wordsmith-k8s
        uses: actions/checkout@v3
        with:
          repository: MostlyDevOps/wordsmith-k8s
          token: ${{ secrets.GITOPS_TOKEN }}

      - name: Change image tag in kustomization.yaml
        run: |
          cd environments/staging01
          kustomize edit set image "ghcr.io/${GITHUB_REPOSITORY,,}:${{ needs.docker-build-pr.outputs.image-tag }}"
          cat kustomization.yaml

      - name: Create Pull Request
        id: cpr
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITOPS_TOKEN }}
          commit-message: "Update image for ${{ github.repository }} env staging01"
          title: "Env staging01 image update: ${{ github.repository }}:${{ needs.docker-build-pr.outputs.image-tag }}"
          body: "Update image tag of file `./environments/staging01/kustomization.yaml` to `ghcr.io/${{ github.repository }}:${{ needs.docker-build-pr.outputs.image-tag }}`"
          branch: "${{ needs.docker-build-pr.outputs.image-tag }}"

      # TODO: echo "Pull Request URL - ${{ steps.cpr.outputs.pull-request-url }}"
      
      # - name: Post to a Slack channel
      #   id: slack
      #   uses: slackapi/slack-github-action@v1
      #   with:
      #     channel-id: 'CHANNEL_ID'
      #     slack-message: "New GitOps PR created for env XXX with image `ghcr.io/${GITHUB_REPOSITORY,,}:${{ needs.docker-build-pr.outputs.image-tag }}`"
      #   env:
      #     SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
    


  # run this job on every push to the default branch (including merges and tags)
  # it will push images to GHCR and DockerHub
  # tags will also include ones like `stable-<date>-<sha>` and `latest`
  docker-build-merge:
    name: Call Build on Push
    # this if is filtered to only the main branch push event (see events at top)
    if: github.event_name == 'push'
    uses: ./.github/workflows/reusable-docker-build.yaml    
    secrets:
      dockerhub-username: ${{ secrets.DOCKERHUB_USERNAME }}
      dockerhub-token: ${{ secrets.DOCKERHUB_TOKEN }}
    with:  
      dockerhub-enable: true
      ghcr-enable: true
      push: true
      image-names: |
        docker.io/${{ github.repository }}
        ghcr.io/${{ github.repository }}
